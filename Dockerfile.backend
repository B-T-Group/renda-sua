# This file is generated by Nx.
#
# Build the docker image with `npx nx docker-build @rendasua/backend`.
# Tip: Modify "docker-build" options in project.json to change docker build args.
#
# Run the container with `docker run -p 3000:3000 -t rendasua-backend`.

# Stage 1: Build
FROM node:lts-alpine AS builder
WORKDIR /app

# Install dependencies and build the app
COPY apps/backend/package.json ./apps/backend/package.json
COPY package.json ./
COPY package-lock.json ./
RUN npm install --legacy-peer-deps
COPY apps ./apps
COPY tsconfig.base.json ./
COPY tsconfig.json ./
COPY apps/backend/tsconfig.* ./apps/backend/
COPY apps/backend/webpack.config.js ./apps/backend/
RUN npx nx build backend

# Stage 2: Production image
FROM node:lts-alpine
WORKDIR /app

ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000

# Create a non-root user
RUN addgroup -S rendasua && adduser -S rendasua -G rendasua

# Copy built files and install only production dependencies
COPY --from=builder /app/dist/apps/backend ./dist
COPY package.json ./
COPY package-lock.json ./
RUN npm install --omit=dev --legacy-peer-deps && npm cache clean --force

# Set permissions
RUN chown -R rendasua:rendasua /app
USER rendasua

EXPOSE 3000
CMD ["node", "dist/main.js"]
