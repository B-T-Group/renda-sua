services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.36.0
    platform: linux/arm64
    ports:
      - '8080:8080'
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'false' # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "RS512", "key": "-----BEGIN CERTIFICATE-----\nMIIDHTCCAgWgAwIBAgIJELNEfUocZcXXMA0GCSqGSIb3DQEBCwUAMCwxKjAoBgNV\nBAMTIWdyb3VwZS1idC1jbGllbnQtZGV2LnVzLmF1dGgwLmNvbTAeFw0yMzAyMDgx\nNjE4NTJaFw0zNjEwMTcxNjE4NTJaMCwxKjAoBgNVBAMTIWdyb3VwZS1idC1jbGll\nbnQtZGV2LnVzLmF1dGgwLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAL+Thrdw/Tqj8GCehLvSZ6+fNl3G0RK7NxlZFJZcytAauwh9eyDz9H/LgRE4\nbkjnwISqPX9GFYQ4ZWBgk5i08QZ77nsI4+Mg+mGI3WoRFxHJuNnIayog/L8BS5up\nBVApcatQ22PVikcaQkfyImH7KLmesrloVJmrFsn+5XGYEgRRa0vUI8GhL2RkutKe\n8/ZNE2b2vvzaG1xcgvxQEuukgjFi/6m9fBqXgAyTGH2VzD2WRlIHJozWtxoLWgfZ\nyHEZC5zKwAaO5Xrbe8rrauYDIhq5oN8WuI10FCC845ua5kyUbqpIyVxvpy46adgN\nQsVDYm2pnq1N4zv2xAgEACCPbR8CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\nBgNVHQ4EFgQUa8IQyRFfC7cVdjfiYb70pVBzqfwwDgYDVR0PAQH/BAQDAgKEMA0G\nCSqGSIb3DQEBCwUAA4IBAQC7Wk/tgDqovdIHMiqGVCK/YzjR6KsFXzvf4iLMioxa\naj5zKxJoOElUhTCrmlAknD2QC0YDjrURtLZV6S94ibjYwiKqpCULCogQ5vCz5pqs\nP7rlGmKhA9lVhjYT3MnB02fOy4mf/zBHelYur/o2NUXLF7drik0sYZEzDyurFF5w\nQxtoCnbbm5tJwSZtZLO8bw9gssdQJkawLgyuJXPmKLi0PguwxDuNEMkEzD6j8qtC\nm9VsW38gCyL1eLoi17MFccRTyMjZkbdokLK2dKLuBPt13IfUsGI/LbAfRwpzuyLJ\n3CesniUHuzkrZMxul5m3cOZeLmxWL/MXwx41IpZfQXFt\n-----END CERTIFICATE-----"}'
    depends_on:
      data-connector-agent:
        condition: service_healthy
  data-connector-agent:
    image: hasura/graphql-data-connector:v2.46.0
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: 'false'
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8081/api/v1/athena/health']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
volumes:
  db_data:
